{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/harshada/react/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1; // console.log(\"updatedCount: \" + updatedCount)\n\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert('You can continue');\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Harshada Samant',\n          Address: {\n            street: 'Dummystreet 2',\n            zipCode: '288624',\n            country: 'india'\n          },\n          email: 'samant.tanuja@gmail.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(responce => {\n        // console.log(responce);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/ingredients.json').then(respose => {\n      console, lo;\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice.toFixed(2),\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 28\n      }\n    });\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, orderSummary), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/apple/Desktop/harshada/react/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","Address","street","zipCode","country","email","deliveryMethod","post","then","responce","catch","error","console","log","componentDidMount","get","respose","lo","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport Aux from '../../hoc/Aux/Aux';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {}\n    // }\n\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false,\n        loading: false\n    }\n\n    componentDidMount() {\n        axios.get('/ingredients.json')\n        .then(respose => {\n            console,lo\n        })\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            } , 0);\n            this.setState({purchasable: sum > 0});\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        // console.log(\"updatedCount: \" + updatedCount)\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <= 0) {\n\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        // alert('You can continue');\n        this.setState({loading: true});\n        const order = {\n            ingredients: this.state.ingredients,\n            price: this.state.totalPrice,\n            customer: {\n                name: 'Harshada Samant',\n                Address: {\n                     street: 'Dummystreet 2',\n                     zipCode: '288624',\n                     country: 'india'\n                },\n                email: 'samant.tanuja@gmail.com'\n            },\n            deliveryMethod: 'fastest'\n        }\n        axios.post('/orders.json', order)\n        .then(responce => {\n            // console.log(responce);\n            this.setState({loading: false, purchasing: false});\n        })\n        .catch(error => {\n            console.log(error);\n            this.setState({loading: false, purchasing: false});\n        })\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = <OrderSummary \n        ingredients={this.state.ingredients}\n        price={this.state.totalPrice.toFixed(2)}\n        purchaseCancelled={this.purchaseCancelHandler}\n        purchaseContinued={this.purchaseContinueHandler}\n        />\n        if(this.state.loading) {\n            orderSummary = <Spinner/>;\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls \n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    disabled={disabledInfo}\n                    purchasable={this.state.purchasable}\n                    price={this.state.totalPrice}\n                    ordered={this.purchaseHandler}\n                />\n            </Aux>\n        );\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}